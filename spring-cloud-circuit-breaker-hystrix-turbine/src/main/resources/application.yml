#spring.profiles.active: commons

spring.application.name: spring-cloud-circuit-breaker-hystrix-turbine
server.port: 8205

eureka.client.serviceUrl.defaultZone: http://localhost:8761/eureka/

# LOGGING
logging.level.com.spring.cloud.circuit.breaker.hystrix.turbine: DEBUG
logging.pattern.console: ${CONSOLE_LOG_PATTERN:-%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(${LOG_LEVEL_PATTERN:-%5p}) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %4line %clr(:){faint} %m%n${LOG_EXCEPTION_CONVERSION_WORD:-%wEx}}

turbine.endpoints.clusters.enabled: true

# turbine.aggregator.cluster-config: 指定聚合哪些集群,多个使用","分割，默认为default。
# turbine.app-config: 配置监控服务的列表，表明监控哪些服务多个使用","分割
# turbine.cluster-name-expression: 用于指定集群名称，当服务数量非常多的时候，可以启动多个Turbine服务来构建不同的聚合集群，
# 而该参数可以用来区分这些不同的聚合集群，同时该参数值可以再Hystrix仪表盘中用来定位不同的聚合集群，
# 只需在Hystrix Stream的URL中通过cluster参数来指定
# 当clusterNameExpression: metadata['cluster']时，假设想要监控的应用配置了eureka.instance.metadata-map.cluster: ABC，则需要配置，同时turbine.aggregator.clusterConfig: ABC
# turbine.combine-host-port参数设置为true，可以让同一主机上的服务通过主机名与端口号的组合来进行区分，默认情况下会以host来区分不同的服务，这会使得在本机调试的时候，本机上的不同服务聚合成一个服务来统计。

# turbine.appConfig: 配置Eureka中的serviceId列表，表明监控哪些服务
# turbine.aggregator.clusterConfig: 指定聚合哪些集群，多个使用”,”分割，默认为default。可使用http://.../turbine.stream?cluster={clusterConfig之一}访问
# turbine.clusterNameExpression:
# 1. clusterNameExpression指定集群名称，默认表达式appName；此时：turbine.aggregator.clusterConfig需要配置想要监控的应用名称；
# 2. 当clusterNameExpression: default时，turbine.aggregator.clusterConfig可以不写，因为默认就是default；
# 3. 当clusterNameExpression: metadata[‘cluster’]时，假设想要监控的应用配置了eureka.instance.metadata-map.cluster: ABC，
#    则需要配置，同时turbine.aggregator.clusterConfig: ABC

# default config
turbine.appConfig: spring-cloud-circuit-breaker-hystrix,spring-cloud-circuit-breaker-hystrix2
# 默认配置时 turbine.aggregator.clusterConfig 可以不配置，值就是 default
#turbine.aggregator.clusterConfig: default
turbine.clusterNameExpression: "'default'"

## cluster config 未配置好
#turbine.appConfig: spring-cloud-circuit-breaker-hystrix,spring-cloud-circuit-breaker-hystrix2
#turbine.aggregator.clusterConfig: SPRING-CLOUD-CIRCUIT-BREAKER-HYSTRIX,SPRING-CLOUD-CIRCUIT-BREAKER-HYSTRIX2
#turbine.clusterNameExpression: metadata['cluster']
