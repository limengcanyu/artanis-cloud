server:
  port: 8091

# register using eureka
eureka:
  instance:
    hostname: localhost
    leaseRenewalIntervalInSeconds: 10
    health-check-url-path: /actuator/health
    metadata-map:
      startup: ${random.int} # needed to trigger info and endpoint update after restart
    prefer-ip-address: true # 解决docker中feign调用出现连接拒绝
  client:
    registerWithEureka: true
    fetchRegistry: true
    registryFetchIntervalSeconds: 5
    healthcheck:
      enabled: true
    serviceUrl:
      defaultZone: http://eureka-server-0.eureka-server-headless.default.svc.cluster.local:8761/eureka,http://eureka-server-1.eureka-server-headless.default.svc.cluster.local:8761/eureka,http://eureka-server-2.eureka-server-headless.default.svc.cluster.local:8761/eureka

# GatewayFilterConfig 中配置 modifyRequestBody 后，这里不用再配置
spring:
  cloud:
    # register using nacos
    nacos:
      # 启动配置管理
      config:
        server-addr: nacos.default:8848
      # 启动服务发现
      discovery:
        server-addr: nacos.default:8848
    sentinel:
      enabled: false
      transport:
        port: 8719
        dashboard: localhost:8720
    gateway:
      routes:
        - id: micro-service1
          uri: lb://spring-cloud-micro-service1
          predicates:
            - Path=/service1/**
          filters:
            - StripPrefix=1
              #        - id: micro-service2
              #          uri: lb://spring-cloud-micro-service2
              #          predicates:
              #            - Path=/service2/**
              #          filters:
              #            - StripPrefix=1
              #        - id: micro-service3
              #          uri: lb://spring-cloud-micro-service3
              #          predicates:
              #            - Path=/service3/**
              #          filters:
              #            - StripPrefix=1
            # Add your routes here.
        - id: aliyun_route
          uri: https://www.aliyun.com/
          predicates:
            - Path=/product/**
        - id: httpbin_route
          uri: https://httpbin.org
          predicates:
            - Path=/httpbin/**
          filters:
            - RewritePath=/httpbin/(?<segment>.*), /$\{segment}
        - id: order-service
#          uri: lb://spring-cloud-order-service # k8s中这种方式无效
          uri: http://order-service.default:8083 # k8s中这种方式有效
          predicates:
            - Path=/order/**
          filters:
            - StripPrefix=1
        - id: user-service
          uri: http://user-service.default:8083
          predicates:
            - Path=/user/**
          filters:
            - StripPrefix=1
