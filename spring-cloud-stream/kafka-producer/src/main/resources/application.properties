server.port=8881
spring.application.name=spring-cloud-stream-kafka-producer
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka/

# Kafka Binder Properties

# A list of brokers to which the Kafka binder connects.
# Default: localhost.
#spring.cloud.stream.kafka.binder.brokers=localhost:9092
spring.cloud.stream.kafka.binder.brokers=172.16.112.191:9092

# If set to true, the binder creates new topics automatically.
# If set to false, the binder relies on the topics being already configured.
# In the latter case, if the topics do not exist, the binder fails to start.
# This setting is independent of the auto.topic.create.enable setting of the broker and does not influence it.
# If the server is set to auto-create topics, they may be created as part of the metadata retrieval request, with default broker settings.
# Default: true.
spring.cloud.stream.kafka.binder.autoCreateTopics=true

# If set to true, the binder creates new partitions if required.
# If set to false, the binder relies on the partition size of the topic being already configured.
# If the partition count of the target topic is smaller than the expected value, the binder fails to start.
# Default: false.
spring.cloud.stream.kafka.binder.autoAddPartitions=true

management.endpoints.web.exposure.include=bindings

# 通过两个channel向同一个topic发送消息
spring.cloud.stream.bindings.output.destination=topic2
spring.cloud.stream.bindings.output.content-type=application/json

# 配置分区的输出绑定
spring.cloud.stream.bindings.output.producer.partitionKeyExpression=payload.id
# 此属性开始若报无订阅者错误，需开启autoAddPartitions=true
# 输出消息分布到3个分区
spring.cloud.stream.bindings.output.producer.partitionCount=3

# partition Key 提取器名称，负责从消息中提取分区key
spring.cloud.stream.bindings.output.producer.partitionKeyExtractorName=customPartitionKeyExtractor
# 自定义partition选择器，负责根据分区key和partitionCount计算出将消息发布到哪个分区
spring.cloud.stream.bindings.output.producer.partitionSelectorName=customPartitionSelector
